{"componentChunkName":"component---src-pages-languages-language-js","path":"/languages/autohotkey/","result":{"data":{"allFile":{"nodes":[{"name":"autohotkey","relativePath":"languages/autohotkey/autohotkey.ahk","extension":"ahk","fields":{"contents":"; Set the number of random numbers to generate and the upper bound for the numbers\nn := 10\nx := 100\n\n; Generate N random numbers between 1 and X\nnumbers := []\nRandom, number, 1, x, %n%\nLoop, %n%\n{\n    numbers.Push(number%A_Index%)\n}\n\n; Calculate the probability of each number\ncounts := []\ntotal := n\nLoop, %x%\n{\n    counts[A_Index] := 0\n}\nLoop, %n%\n{\n    counts[numbers[A_Index]]++\n}\nprobabilities := []\nLoop, %x%\n{\n    probabilities[A_Index] := counts[A_Index] / total\n}\n\n; Generate a file name based on the values of N and X\nfileName := \"ahk_\" n \"_\" x \".csv\"\n\n; Create the \"outputs\" directory if it does not exist\nIfNotExist, outputs\n{\n    FileCreateDir, outputs\n}\n\n; Write the probabilities to a file in the \"outputs\" directory\nfile := FileOpen(\"outputs\\\" fileName, \"w\")\nLoop, %x%\n{\n    FileWriteLine, %file%, %A_Index%, %probabilities[A_Index]\n}\nFileClose, %file%\n"},"childImageSharp":null}]}},"pageContext":{"name":"autohotkey","regLang":"/(languages/autohotkey)/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}