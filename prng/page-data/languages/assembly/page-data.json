{"componentChunkName":"component---src-pages-languages-language-js","path":"/languages/assembly/","result":{"data":{"allFile":{"nodes":[{"name":"assembly","relativePath":"languages/assembly/assembly.asm","extension":"asm","fields":{"contents":"#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n// Set the number of random numbers to generate and the upper bound for the numbers\n#define N 10\n#define X 100\n\n// Generate N random numbers between 1 and X\nint* generateNumbers() {\n    // Initialize the random number generator with a seed based on the current time\n    srand(time(NULL));\n\n    // Allocate memory for the array of numbers\n    int* numbers = (int*)malloc(N * sizeof(int));\n\n    // Generate the random numbers and store them in the array\n    for (int i = 0; i < N; i++) {\n        numbers[i] = rand() % X + 1;\n    }\n\n    return numbers;\n}\n\n// Calculate the probability of each number\nint* calculateProbabilities(int* numbers) {\n    // Allocate memory for the array of probabilities\n    int* probabilities = (int*)calloc(X, sizeof(int));\n\n    // Calculate the probability of each number\n    for (int i = 0; i < N; i++) {\n        probabilities[numbers[i] - 1]++;\n    }\n\n    return probabilities;\n}\n\nint main() {\n    // Generate the random numbers\n    int* numbers = generateNumbers();\n\n    // Calculate the probabilities\n    int* probabilities = calculateProbabilities(numbers);\n\n    // Generate a file name based on the values of N and X\n    char fileName[100];\n    sprintf(fileName, \"c_%d_%d.csv\", N, X);\n\n    // Write the probabilities to a file in the \"outputs\" directory\n    FILE* file = fopen(\"outputs/\", fileName);\n    for (int i = 0; i < X; i++) {\n        fprintf(file, \"%d,%d\\n\", i + 1, probabilities[i]);\n    }\n    fclose(file);\n\n    // Free the memory used by the arrays of numbers and probabilities\n    free(numbers);\n   \n"},"childImageSharp":null}]}},"pageContext":{"name":"assembly","regLang":"/(languages/assembly)/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}