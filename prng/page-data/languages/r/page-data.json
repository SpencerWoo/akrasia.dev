{"componentChunkName":"component---src-pages-languages-language-js","path":"/languages/r/","result":{"data":{"allFile":{"nodes":[{"name":"rust","relativePath":"languages/rust/rust.rs","extension":"rs","fields":{"contents":"use std::fs::{create_dir_all, File};\nuse std::io::Write;\nuse std::collections::HashMap;\nuse rand::{thread_rng, Rng};\n\n// Set the number of random numbers to generate and the upper bound for the numbers\nconst N: usize = 10;\nconst X: usize = 100;\n\nfn main() {\n    // Generate N random numbers between 1 and X\n    let numbers: Vec<usize> = (0..N).map(|_| thread_rng().gen_range(1, X + 1)).collect();\n\n    // Calculate the probability of each number\n    let mut counts = HashMap::new();\n    for number in &numbers {\n        *counts.entry(number).or_insert(0) += 1;\n    }\n    let total = numbers.len();\n    let probabilities = numbers\n        .iter()\n        .map(|number| (number, *counts.get(number).unwrap() as f64 / total as f64))\n        .collect::<Vec<_>>();\n\n    // Generate a file name based\n"},"childImageSharp":null},{"name":"ruby","relativePath":"languages/ruby/ruby.rb","extension":"rb","fields":{"contents":"# Set the number of random numbers to generate and the upper bound for the numbers\nn = 10\nx = 100\n\n# Generate N random numbers between 1 and X\nrandom = Random.new\nnumbers = n.times.map { random.rand(1..x) }\n\n# Calculate the probability of each number\ncounts = numbers.each_with_object(Hash.new(0)) { |number, hash| hash[number] += 1 }\ntotal = numbers.count\nprobabilities = counts.map { |number, count| [number, count.to_f / total] }.to_h\n\n# Generate a file name based on the values of N and X\nfile_name = \"ruby_#{n}_#{x}.csv\"\n\n# Create the \"outputs\" directory if it does not exist\nDir.mkdir(\"outputs\") unless Dir.exists?(\"outputs\")\n\n# Write the probabilities to a file in the \"outputs\" directory\nFile.open(\"outputs/#{file_name}\", \"w\") do |file|\n  probabilities.each do |number, probability|\n    file.puts \"#{number},#{probability}\"\n  end\nend\n"},"childImageSharp":null},{"name":"r","relativePath":"languages/r/r.r","extension":"r","fields":{"contents":"# Set the number of random numbers to generate and the upper bound for the numbers\nn <- 10\nx <- 100\n\n# Generate N random numbers between 1 and X\nnumbers <- sample(1:x, n, replace = TRUE)\n\n# Calculate the probability of each number\ncounts <- table(numbers)\ntotal <- length(numbers)\nprobabilities <- counts / total\n\n# Generate a file name based on the values of N and X\nfileName <- paste0(\"r_\", n, \"_\", x, \".csv\")\n\n# Create the \"outputs\" directory if it does not exist\nif (!dir.exists(\"outputs\")) {\n    dir.create(\"outputs\")\n}\n\n# Write the probabilities to a file in the \"outputs\" directory\nfile <- file(\"outputs/\", fileName, open = \"w\")\nwriteLines(paste(names(probabilities), probabilities, sep = \",\"), file)\nclose(file)\n"},"childImageSharp":null}]}},"pageContext":{"name":"r","regLang":"/(languages/r)/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}