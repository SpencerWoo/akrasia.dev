{"componentChunkName":"component---src-pages-languages-language-js","path":"/languages/csharp/","result":{"data":{"allFile":{"nodes":[{"name":"csharp","relativePath":"languages/csharp/csharp.cs","extension":"cs","fields":{"contents":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nnamespace RandomNumbers\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // Set the number of random numbers to generate and the upper bound for the numbers\n            var n = 10;\n            var x = 100;\n\n            // Generate N random numbers between 1 and X\n            var random = new Random();\n            var numbers = Enumerable.Range(0, n).Select(_ => random.Next(1, x + 1)).ToList();\n\n            // Calculate the probability of each number\n            var counts = numbers.GroupBy(number => number).ToDictionary(group => group.Key, group => group.Count());\n            var total = numbers.Count;\n            var probabilities = counts.ToDictionary(kvp => kvp.Key, kvp => kvp.Value / (double)total);\n\n            // Generate a file name based on the values of N and X\n            var fileName = $\"csharp_{n}_{x}.csv\";\n\n            // Create the \"outputs\" directory if it does not exist\n            Directory.CreateDirectory(\"outputs\");\n\n            // Write the probabilities to a file in the \"outputs\" directory\n            using (var writer = new StreamWriter($\"outputs/{fileName}\"))\n            {\n                foreach (var (number, probability) in numbers.Zip(probabilities.Values, (number, probability) => (number, probability)))\n                {\n                    writer.WriteLine($\"{number},{probability}\");\n                }\n            }\n        }\n    }\n}\n"},"childImageSharp":null}]}},"pageContext":{"name":"csharp","regLang":"/(languages/csharp)/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}