{"componentChunkName":"component---src-pages-languages-language-js","path":"/languages/prolog/","result":{"data":{"allFile":{"nodes":[{"name":"prolog","relativePath":"languages/prolog/prolog.pl","extension":"pl","fields":{"contents":"% Set the number of random numbers to generate and the upper bound for the numbers\n:- dynamic n/1, x/1.\nn(10).\nx(100).\n\n% Generate N random numbers between 1 and X\nrandom_numbers(Numbers) :-\n  findall(Number, (between(1, x, Number), random(1, 100, R), R =< n), Numbers).\n\n% Calculate the probability of each number\nprobabilities(Numbers, Probabilities) :-\n  length(Numbers, Total),\n  sort(Numbers, Sorted),\n  group_pairs_by_key(Sorted, Grouped),\n  maplist(probability, Grouped, Probabilities).\n\nprobability((Number, Occurrences), Probability) :-\n  length(Occurrences, Count),\n  Probability is Count / Total.\n\n% Generate a file name based on the values of N and X\nfile_name(Name) :-\n  n(N),\n  x(X),\n  format(atom(Name), \"prolog_~w_~w.csv\", [N, X]).\n\n% Create the \"outputs\" directory if it does not exist\n:- make.\n\n% Write the probabilities to a file in the \"outputs\" directory\nmake :-\n  file_name(File),\n  setup_call_cleanup(\n    open(File, write, Stream),\n    (\n      random_numbers(Numbers),\n      probabilities(Numbers, Probabilities),\n      maplist(write_probability(Stream), Numbers, Probabilities)\n    ),\n    close(Stream)\n  ).\n\nwrite_probability(Stream, Number, Probability) :-\n  format(Stream,\n"},"childImageSharp":null}]}},"pageContext":{"name":"prolog","regLang":"/(languages/prolog)/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}